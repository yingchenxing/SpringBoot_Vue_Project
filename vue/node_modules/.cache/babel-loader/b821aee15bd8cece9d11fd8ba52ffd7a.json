{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"Profile\",\n  data: function data() {\n    return {\n      form: {},\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.request.get(\"/user/username/\" + this.user.username).then(function (res) {\n      if (res.code === '200') {\n        _this.form = res.data;\n      }\n    });\n  },\n  method: {\n    save: function save() {\n      var _this2 = this;\n\n      this.request.post(\"/user\", this.form).then(function (res) {\n        if (res.data) {\n          _this2.$message.success(\"Save successfully!\");\n\n          _this2.dialogFormVisible = false;\n\n          _this2.load();\n        } else {\n          _this2.$message.error(\"Fail to save!\");\n        }\n      });\n    },\n    handleAvatarSuccess: function handleAvatarSuccess(res, file) {\n      this.imageUrl = URL.createObjectURL(file.raw);\n    },\n    beforeAvatarUpload: function beforeAvatarUpload(file) {\n      var isJPG = file.type === 'image/jpeg';\n      var isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG) {\n        this.$message.error('上传头像图片只能是 JPG 格式!');\n      }\n\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n\n      return isJPG && isLt2M;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;EACAA,eADA;EAEAC,IAFA,kBAEA;IACA;MACAC,QADA;MAEAC;IAFA;EAIA,CAPA;EAQAC,OARA,qBAQA;IAAA;;IACA;MACA;QACA;MACA;IACA,CAJA;EAKA,CAdA;EAeAC;IACAC,IADA,kBACA;MAAA;;MACA;QAEA;UACA;;UACA;;UACA;QACA,CAJA,MAIA;UACA;QACA;MACA,CATA;IAUA,CAZA;IAaAC,mBAbA,+BAaAC,GAbA,EAaAC,IAbA,EAaA;MACA;IACA,CAfA;IAgBAC,kBAhBA,8BAgBAD,IAhBA,EAgBA;MACA;MACA;;MAEA;QACA;MACA;;MACA;QACA;MACA;;MACA;IACA;EA3BA;AAfA","names":["name","data","form","user","created","method","save","handleAvatarSuccess","res","file","beforeAvatarUpload"],"sourceRoot":"src/views","sources":["Profile.vue"],"sourcesContent":["<template>\r\n<el-card style=\"width: 500px;\">\r\n    <el-form label-width=\"80px\">\r\n      <el-upload\r\n          class=\"avatar-uploader\"\r\n          action=\"http://localhost:9090/file/upload\"\r\n          :show-file-list=\"false\"\r\n          :on-success=\"handleAvatarSuccess\"\r\n          :before-upload=\"beforeAvatarUpload\">\r\n        <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\">\r\n        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n      </el-upload>\r\n      <el-form-item label=\"username\">\r\n        <el-input v-model=\"form.username\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"nickname\">\r\n        <el-input v-model=\"form.nickname\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"email\">\r\n        <el-input v-model=\"form.email\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"phone\">\r\n        <el-input v-model=\"form.phone\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"address\">\r\n        <el-input v-model=\"form.address\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"save\">Save</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n</el-card>\r\n</template>\r\n\r\n\r\n<style>\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Profile\",\r\n  data(){\r\n    return{\r\n      form:{},\r\n      user: localStorage.getItem(\"user\")?JSON.parse(localStorage.getItem(\"user\")):{}\r\n    }\r\n  },\r\n  created(){\r\n    this.request.get(\"/user/username/\"+this.user.username).then(res=>{\r\n      if(res.code==='200'){\r\n        this.form=res.data\r\n      }\r\n    })\r\n  },\r\n  method:{\r\n    save() {\r\n      this.request.post(\"/user\", this.form).then(res => {\r\n\r\n        if (res.data) {\r\n          this.$message.success(\"Save successfully!\")\r\n          this.dialogFormVisible = false\r\n          this.load()\r\n        } else {\r\n          this.$message.error(\"Fail to save!\")\r\n        }\r\n      })\r\n    },\r\n    handleAvatarSuccess(res, file) {\r\n      this.imageUrl = URL.createObjectURL(file.raw);\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      const isJPG = file.type === 'image/jpeg';\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n      if (!isJPG) {\r\n        this.$message.error('上传头像图片只能是 JPG 格式!');\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error('上传头像图片大小不能超过 2MB!');\r\n      }\r\n      return isJPG && isLt2M;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}